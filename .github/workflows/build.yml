name: Build Tnn-miner on Ubuntu 22.04

on:
  push:
    branches:
    - '*dev*'

jobs:
  ubuntu-22:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: 'Update system'
      run: |
        sudo apt update && sudo apt upgrade -y
    - name: 'Setup pre-reqs'
      run: |
        sudo apt install git wget build-essential cmake clang libssl-dev libudns-dev libfmt-dev libc++-dev
        #sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100 --slave /usr/bin/gcc gcc /usr/bin/gcc-10
    - name: 'Install clang 17'
      run: |
        echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main" | sudo tee /etc/apt/sources.list.d/clang.list
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        sudo apt update
        sudo apt install clang-17 -y
    - name: 'Update default clang'
      run: |
        wget https://raw.githubusercontent.com/ShangjinTang/dotfiles/05ef87daae29475244c276db5d406b58c52be445/linux/ubuntu/22.04/bin/update-alternatives-clang
        sudo bash ./update-alternatives-clang
    - name: 'Compile boost'
      run: |
        wget -q https://github.com/boostorg/boost/releases/download/boost-1.82.0/boost-1.82.0.tar.gz
        tar -xf boost-1.82.0.tar.gz
        cd boost-1.82.0/
        ./bootstrap.sh --with-toolset=clang 
        ./b2 clean
        ./b2 toolset=clang cxxflags=-std=c++20 -stdlib=libc++ linkflags=-stdlib=libc++ link=static
    - name: 'Compile Tnn-miner'
      run: |
        mkdir build
        cd build
        cmake ..
        make -j3 $(nproc)
        ls -laR ./
